import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Badge } from "@/components/ui/badge";
import { useState } from "react";
import {
  LineChart,
  Line,
  AreaChart,
  Area,
  BarChart,
  Bar,
  PieChart,
  Pie,
  Cell,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  ResponsiveContainer,
  Legend
} from "recharts";
import { TrendingDown, TrendingUp, Calendar, Filter } from "lucide-react";

export function VulnerabilityCharts() {
  const [timeRange, setTimeRange] = useState("7d");
  const [chartType, setChartType] = useState("trends");

  // Sample data for charts
  const vulnerabilityTrends = [
    { date: "Jan 1", critical: 2, high: 5, medium: 8, low: 12, total: 27 },
    { date: "Jan 8", critical: 1, high: 4, medium: 7, low: 10, total: 22 },
    { date: "Jan 15", critical: 3, high: 6, medium: 5, low: 8, total: 22 },
    { date: "Jan 22", critical: 1, high: 3, medium: 6, low: 7, total: 17 },
    { date: "Jan 29", critical: 0, high: 2, medium: 4, low: 6, total: 12 },
    { date: "Feb 5", critical: 2, high: 3, medium: 3, low: 4, total: 12 },
    { date: "Feb 12", critical: 1, high: 2, medium: 2, low: 3, total: 8 }
  ];

  const securityScoreTrends = [
    { date: "Jan 1", score: 65, projects: 3 },
    { date: "Jan 8", score: 72, projects: 4 },
    { date: "Jan 15", score: 68, projects: 5 },
    { date: "Jan 22", score: 75, projects: 6 },
    { date: "Jan 29", score: 82, projects: 7 },
    { date: "Feb 5", score: 78, projects: 8 },
    { date: "Feb 12", score: 85, projects: 8 }
  ];

  const vulnerabilityTypes = [
    { name: "SQL Injection", value: 35, color: "#EF4444" },
    { name: "XSS", value: 25, color: "#F97316" },
    { name: "CSRF", value: 15, color: "#EAB308" },
    { name: "Auth Issues", value: 12, color: "#3B82F6" },
    { name: "Other", value: 13, color: "#6B7280" }
  ];

  const languageStats = [
    { language: "JavaScript", vulnerabilities: 45, scans: 120 },
    { language: "Python", vulnerabilities: 32, scans: 89 },
    { language: "PHP", vulnerabilities: 28, scans: 67 },
    { language: "Java", vulnerabilities: 22, scans: 54 },
    { language: "C#", vulnerabilities: 18, scans: 43 },
    { language: "Ruby", vulnerabilities: 15, scans: 35 }
  ];

  const CustomTooltip = ({ active, payload, label }: any) => {
    if (active && payload && payload.length) {
      return (
        <div className="bg-background border rounded-lg shadow-lg p-3">
          <p className="font-medium">{label}</p>
          {payload.map((entry: any, index: number) => (
            <p key={index} style={{ color: entry.color }} className="text-sm">
              {entry.dataKey}: {entry.value}
            </p>
          ))}
        </div>
      );
    }
    return null;
  };

  return (
    <div className="space-y-6">
      {/* Chart Controls */}
      <div className="flex items-center justify-between">
        <div className="flex items-center space-x-4">
          <Select value={timeRange} onValueChange={setTimeRange}>
            <SelectTrigger className="w-32">
              <Calendar className="w-4 h-4 mr-2" />
              <SelectValue />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="7d">7 Days</SelectItem>
              <SelectItem value="30d">30 Days</SelectItem>
              <SelectItem value="90d">90 Days</SelectItem>
              <SelectItem value="1y">1 Year</SelectItem>
            </SelectContent>
          </Select>
          
          <Select value={chartType} onValueChange={setChartType}>
            <SelectTrigger className="w-40">
              <Filter className="w-4 h-4 mr-2" />
              <SelectValue />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="trends">Trends</SelectItem>
              <SelectItem value="distribution">Distribution</SelectItem>
              <SelectItem value="languages">By Language</SelectItem>
            </SelectContent>
          </Select>
        </div>
        
        <div className="flex items-center space-x-2">
          <Badge variant="outline" className="flex items-center space-x-1">
            <TrendingDown className="w-3 h-3 text-green-500" />
            <span>-15% vulnerabilities</span>
          </Badge>
          <Badge variant="outline" className="flex items-center space-x-1">
            <TrendingUp className="w-3 h-3 text-blue-500" />
            <span>+12% security score</span>
          </Badge>
        </div>
      </div>

      {/* Main Charts */}
      {chartType === "trends" && (
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* Vulnerability Trends */}
          <Card>
            <CardHeader>
              <CardTitle className="text-lg">Vulnerability Trends</CardTitle>
              <CardDescription>
                Track vulnerability detection over time by severity
              </CardDescription>
            </CardHeader>
            <CardContent>
              <ResponsiveContainer width="100%" height={300}>
                <AreaChart data={vulnerabilityTrends}>
                  <CartesianGrid strokeDasharray="3 3" />
                  <XAxis dataKey="date" />
                  <YAxis />
                  <Tooltip content={<CustomTooltip />} />
                  <Legend />
                  <Area
                    type="monotone"
                    dataKey="critical"
                    stackId="1"
                    stroke="#EF4444"
                    fill="#EF4444"
                    fillOpacity={0.8}
                  />
                  <Area
                    type="monotone"
                    dataKey="high"
                    stackId="1"
                    stroke="#F97316"
                    fill="#F97316"
                    fillOpacity={0.8}
                  />
                  <Area
                    type="monotone"
                    dataKey="medium"
                    stackId="1"
                    stroke="#EAB308"
                    fill="#EAB308"
                    fillOpacity={0.8}
                  />
                  <Area
                    type="monotone"
                    dataKey="low"
                    stackId="1"
                    stroke="#3B82F6"
                    fill="#3B82F6"
                    fillOpacity={0.8}
                  />
                </AreaChart>
              </ResponsiveContainer>
            </CardContent>
          </Card>

          {/* Security Score Trends */}
          <Card>
            <CardHeader>
              <CardTitle className="text-lg">Security Score History</CardTitle>
              <CardDescription>
                Monitor overall security score improvements
              </CardDescription>
            </CardHeader>
            <CardContent>
              <ResponsiveContainer width="100%" height={300}>
                <LineChart data={securityScoreTrends}>
                  <CartesianGrid strokeDasharray="3 3" />
                  <XAxis dataKey="date" />
                  <YAxis domain={[0, 100]} />
                  <Tooltip content={<CustomTooltip />} />
                  <Line
                    type="monotone"
                    dataKey="score"
                    stroke="#10B981"
                    strokeWidth={3}
                    dot={{ fill: "#10B981", strokeWidth: 2, r: 4 }}
                    activeDot={{ r: 6 }}
                  />
                </LineChart>
              </ResponsiveContainer>
            </CardContent>
          </Card>
        </div>
      )}

      {chartType === "distribution" && (
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* Vulnerability Types Distribution */}
          <Card>
            <CardHeader>
              <CardTitle className="text-lg">Vulnerability Types</CardTitle>
              <CardDescription>
                Distribution of vulnerability types found
              </CardDescription>
            </CardHeader>
            <CardContent>
              <ResponsiveContainer width="100%" height={300}>
                <PieChart>
                  <Pie
                    data={vulnerabilityTypes}
                    cx="50%"
                    cy="50%"
                    labelLine={false}
                    label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}
                    outerRadius={80}
                    fill="#8884d8"
                    dataKey="value"
                  >
                    {vulnerabilityTypes.map((entry, index) => (
                      <Cell key={`cell-${index}`} fill={entry.color} />
                    ))}
                  </Pie>
                  <Tooltip />
                </PieChart>
              </ResponsiveContainer>
            </CardContent>
          </Card>

          {/* Severity Distribution */}
          <Card>
            <CardHeader>
              <CardTitle className="text-lg">Severity Distribution</CardTitle>
              <CardDescription>
                Breakdown of vulnerabilities by severity level
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {[
                  { severity: "Critical", count: 8, percentage: 15, color: "bg-red-500" },
                  { severity: "High", count: 15, percentage: 28, color: "bg-orange-500" },
                  { severity: "Medium", count: 20, percentage: 37, color: "bg-yellow-500" },
                  { severity: "Low", count: 11, percentage: 20, color: "bg-blue-500" }
                ].map((item) => (
                  <div key={item.severity} className="flex items-center justify-between">
                    <div className="flex items-center space-x-3">
                      <div className={`w-3 h-3 rounded-full ${item.color}`} />
                      <span className="text-sm font-medium">{item.severity}</span>
                    </div>
                    <div className="flex items-center space-x-2">
                      <div className="w-24 bg-muted rounded-full h-2">
                        <div
                          className={`h-2 rounded-full ${item.color}`}
                          style={{ width: `${item.percentage}%` }}
                        />
                      </div>
                      <span className="text-sm text-muted-foreground w-8">{item.count}</span>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>
      )}

      {chartType === "languages" && (
        <Card>
          <CardHeader>
            <CardTitle className="text-lg">Vulnerability Analysis by Language</CardTitle>
            <CardDescription>
              Compare vulnerability rates across different programming languages
            </CardDescription>
          </CardHeader>
          <CardContent>
            <ResponsiveContainer width="100%" height={400}>
              <BarChart data={languageStats}>
                <CartesianGrid strokeDasharray="3 3" />
                <XAxis dataKey="language" />
                <YAxis />
                <Tooltip content={<CustomTooltip />} />
                <Legend />
                <Bar dataKey="vulnerabilities" fill="#EF4444" name="Vulnerabilities" />
                <Bar dataKey="scans" fill="#3B82F6" name="Total Scans" />
              </BarChart>
            </ResponsiveContainer>
          </CardContent>
        </Card>
      )}

      {/* Summary Cards */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-muted-foreground">This Week</p>
                <p className="text-2xl font-bold">23</p>
                <p className="text-sm text-green-600">-15% from last week</p>
              </div>
              <div className="w-12 h-12 bg-red-100 dark:bg-red-900/30 rounded-lg flex items-center justify-center">
                <TrendingDown className="w-6 h-6 text-red-600" />
              </div>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-muted-foreground">Avg. Fix Time</p>
                <p className="text-2xl font-bold">2.4h</p>
                <p className="text-sm text-blue-600">-20min improvement</p>
              </div>
              <div className="w-12 h-12 bg-blue-100 dark:bg-blue-900/30 rounded-lg flex items-center justify-center">
                <TrendingUp className="w-6 h-6 text-blue-600" />
              </div>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-muted-foreground">Fix Rate</p>
                <p className="text-2xl font-bold">87%</p>
                <p className="text-sm text-green-600">+5% this month</p>
              </div>
              <div className="w-12 h-12 bg-green-100 dark:bg-green-900/30 rounded-lg flex items-center justify-center">
                <TrendingUp className="w-6 h-6 text-green-600" />
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
