import { useMutation, useQueryClient } from "@tanstack/react-query";
import { apiRequest } from "@/lib/queryClient";
import { scanCode } from "@/lib/vulnerabilityScanner";

interface ScanRequest {
  projectId: number;
  scanType: "FILE" | "FOLDER" | "PROJECT";
  code?: string;
  fileName?: string;
}

export function useVulnerabilityScanning() {
  const queryClient = useQueryClient();

  const scanMutation = useMutation({
    mutationFn: async (data: ScanRequest) => {
      if (data.code && data.fileName) {
        // Client-side scanning for quick results
        return scanCode(data.code, data.fileName);
      } else {
        // Server-side scanning for projects
        const response = await apiRequest("POST", "/api/scans", data);
        return response.json();
      }
    },
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ["/api/scans"] });
      queryClient.invalidateQueries({ queryKey: ["/api/dashboard/overview"] });
    },
  });

  return {
    scan: scanMutation.mutateAsync,
    isScanning: scanMutation.isPending,
    scanError: scanMutation.error,
    scanResult: scanMutation.data,
  };
}
